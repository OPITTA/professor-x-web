<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.github.professor_x_web.mapper.DataMapper" >
    <resultMap id="BaseResultMap" type="com.github.professor_x_web.model.Data" >
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="report_id" property="reportId" jdbcType="INTEGER" />
        <result column="average_rt" property="averageRt" jdbcType="INTEGER" />
        <result column="min_rt" property="minRt" jdbcType="INTEGER" />
        <result column="max_rt" property="maxRt" jdbcType="INTEGER" />
        <result column="tps" property="tps" jdbcType="INTEGER" />
        <result column="concurrency" property="concurrency" jdbcType="INTEGER" />
        <result column="error_rate" property="errorRate" jdbcType="INTEGER" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    </resultMap>
    <sql id="Base_Column_List" >
        id, report_id, average_rt, min_rt, max_rt, tps, concurrency, error_rate, create_time
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
        select 
        <include refid="Base_Column_List" />
        from data
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectSelective" resultMap="BaseResultMap" parameterType="com.github.professor_x_web.model.Data" >
        select 
        <include refid="Base_Column_List" />
        from data
        where 1=1
        <if test="reportId != null" >
            and report_id = #{reportId,jdbcType=INTEGER}
        </if>
        <if test="averageRt != null" >
            and average_rt = #{averageRt,jdbcType=INTEGER}
        </if>
        <if test="minRt != null" >
            and min_rt = #{minRt,jdbcType=INTEGER}
        </if>
        <if test="maxRt != null" >
            and max_rt = #{maxRt,jdbcType=INTEGER}
        </if>
        <if test="tps != null" >
            and tps = #{tps,jdbcType=INTEGER}
        </if>
        <if test="concurrency != null" >
            and concurrency = #{concurrency,jdbcType=INTEGER}
        </if>
        <if test="errorRate != null" >
            and error_rate = #{errorRate,jdbcType=INTEGER}
        </if>
        <if test="createTime != null" >
            and create_time = #{createTime,jdbcType=TIMESTAMP}
        </if>
    </select>
    <select id="selectAllSelective" resultMap="BaseResultMap" parameterType="com.github.professor_x_web.model.Data" >
        select 
        <include refid="Base_Column_List" />
        from data
        where 1=1
        <if test="reportId != null" >
            and report_id = #{reportId,jdbcType=INTEGER}
        </if>
        <if test="averageRt != null" >
            and average_rt = #{averageRt,jdbcType=INTEGER}
        </if>
        <if test="minRt != null" >
            and min_rt = #{minRt,jdbcType=INTEGER}
        </if>
        <if test="maxRt != null" >
            and max_rt = #{maxRt,jdbcType=INTEGER}
        </if>
        <if test="tps != null" >
            and tps = #{tps,jdbcType=INTEGER}
        </if>
        <if test="concurrency != null" >
            and concurrency = #{concurrency,jdbcType=INTEGER}
        </if>
        <if test="errorRate != null" >
            and error_rate = #{errorRate,jdbcType=INTEGER}
        </if>
        <if test="createTime != null" >
            and create_time = #{createTime,jdbcType=TIMESTAMP}
        </if>
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
        delete from data
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="com.github.professor_x_web.model.Data" useGeneratedKeys="true" keyProperty="id">
        insert into data (id, report_id, average_rt, 
        min_rt, max_rt, tps, 
        concurrency, error_rate, create_time
        )
        values (#{id,jdbcType=INTEGER}, #{reportId,jdbcType=INTEGER}, #{averageRt,jdbcType=INTEGER}, 
        #{minRt,jdbcType=INTEGER}, #{maxRt,jdbcType=INTEGER}, #{tps,jdbcType=INTEGER}, 
        #{concurrency,jdbcType=INTEGER}, #{errorRate,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.github.professor_x_web.model.Data" useGeneratedKeys="true" keyProperty="id">
        insert into data
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="reportId != null" >
                report_id,
            </if>
            <if test="averageRt != null" >
                average_rt,
            </if>
            <if test="minRt != null" >
                min_rt,
            </if>
            <if test="maxRt != null" >
                max_rt,
            </if>
            <if test="tps != null" >
                tps,
            </if>
            <if test="concurrency != null" >
                concurrency,
            </if>
            <if test="errorRate != null" >
                error_rate,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=INTEGER},
            </if>
            <if test="reportId != null" >
                #{reportId,jdbcType=INTEGER},
            </if>
            <if test="averageRt != null" >
                #{averageRt,jdbcType=INTEGER},
            </if>
            <if test="minRt != null" >
                #{minRt,jdbcType=INTEGER},
            </if>
            <if test="maxRt != null" >
                #{maxRt,jdbcType=INTEGER},
            </if>
            <if test="tps != null" >
                #{tps,jdbcType=INTEGER},
            </if>
            <if test="concurrency != null" >
                #{concurrency,jdbcType=INTEGER},
            </if>
            <if test="errorRate != null" >
                #{errorRate,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.github.professor_x_web.model.Data" >
        update data
        <set >
            <if test="reportId != null" >
                report_id = #{reportId,jdbcType=INTEGER},
            </if>
            <if test="averageRt != null" >
                average_rt = #{averageRt,jdbcType=INTEGER},
            </if>
            <if test="minRt != null" >
                min_rt = #{minRt,jdbcType=INTEGER},
            </if>
            <if test="maxRt != null" >
                max_rt = #{maxRt,jdbcType=INTEGER},
            </if>
            <if test="tps != null" >
                tps = #{tps,jdbcType=INTEGER},
            </if>
            <if test="concurrency != null" >
                concurrency = #{concurrency,jdbcType=INTEGER},
            </if>
            <if test="errorRate != null" >
                error_rate = #{errorRate,jdbcType=INTEGER},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.github.professor_x_web.model.Data" >
        update data
        set report_id = #{reportId,jdbcType=INTEGER},
        average_rt = #{averageRt,jdbcType=INTEGER},
        min_rt = #{minRt,jdbcType=INTEGER},
        max_rt = #{maxRt,jdbcType=INTEGER},
        tps = #{tps,jdbcType=INTEGER},
        concurrency = #{concurrency,jdbcType=INTEGER},
        error_rate = #{errorRate,jdbcType=INTEGER},
        create_time = #{createTime,jdbcType=TIMESTAMP}
        where id = #{id,jdbcType=INTEGER}
    </update>
</mapper>